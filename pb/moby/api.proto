// tangfeixiong <tangfx128@gmail.com>

syntax = "proto3";
package moby;

// HealthConfig holds configuration settings for the HEALTHCHECK feature.
// to see https://github.com/moby/moby/blob/master/api/types/container/config.go
message HealthConfig {
	// Test is the test to perform to check that the container is healthy.
	// An empty slice means to inherit the default.
	// The options are:
	// {} : inherit healthcheck
	// {"NONE"} : disable healthcheck
	// {"CMD", args...} : exec arguments directly
	// {"CMD-SHELL", command} : run command with system's default shell
	repeated string test = 1;

	// Zero means to inherit. Durations are expressed as integer nanoseconds.
	// Golang    time.Duration
    // Interval is the time to wait between checks.
    int64 interval_seconds = 2;
	// Golang     time.Duration
    // Timeout is the time to wait before considering the check to have hung.
    int64 timeout_seconds = 3;
	// Golang time.Duration
    // The start period for the container to initialize before the retries starts to count down.
    int64 start_period = 4;
    
	// Retries is the number of consecutive failures needed to consider a container as unhealthy.
	// Zero means inherit.
	int32 retries = 5;
}

// Config contains the configuration data about a container.
// It should hold only portable information about the container.
// Here, "portable" means "independent from the host we are running on".
// Non-portable information *should* appear in HostConfig.
// All fields added to this struct must be marked 'omitempty' to keep getting
// predictable hashes from the old 'v1Compatibility' configuration.
// to see https://github.com/moby/moby/blob/master/api/types/container/config.go
message Config {
	string hostname = 1;              // Hostname
	string domainname = 2;            // Domainname
	string user = 3;                  // User that will run the command(s) inside the container, also support user:group
	bool attach_stdin = 4;            // Attach the standard input, makes possible user interaction
	bool attach_stdout = 5;           // Attach the standard output
	bool attach_stderr = 6;           // Attach the standard error
	PortSet exposed_ports = 7;        // List of exposed ports
	bool tty = 8;                     // Attach standard streams to a tty, including stdin if it is not closed.
	bool open_stdin = 9;              // Open stdin
	bool stdin_once = 10;             // If true, close stdin after the 1 attached client disconnects.
	repeated string env = 11;         // List of environment variable to set in the container
	repeated string cmd = 12;               // Command to run when starting the container
	HealthConfig healthcheck = 13;          // Healthcheck describes how to check the container is healthy
	bool args_escaped = 14;                 // True if command is already escaped (Windows specific)
	string image = 15;                      // Name of the image as it was passed by the operator (e.g. could be symbolic)
	map<string, VolumeMount> volumes = 16;  // List of volumes (mounts) used for the container
	string working_dir = 17;                // Current directory (PWD) in the command will be launched
	repeated string entrypoint = 18;        // Entrypoint to run when starting the container
	bool network_disabled = 19;             // Is network disabled
	string mac_address = 20;                // Mac Address of the container
	repeated string on_build = 21;          // ONBUILD metadata that were defined on the image Dockerfile
	map<string, string> labels = 22;        // List of labels set to this container
	string stop_signal = 23;                // Signal to stop a container
	int32 stop_timeout = 24;                // Timeout (in seconds) to stop a container
	repeated string shell = 25;             // Shell for shell-form of RUN, CMD, ENTRYPOINT
}

// LogConfig represents the logging configuration of the container.
// to see https://github.com/moby/moby/blob/master/api/types/container/host_config.go
message LogConfig {
	string config_type = 1;          // "", "blocking", "non-blocking"
	map<string, string> config = 2;
}

// RestartPolicy represents the restart policies of the container.
message RestartPolicy {
	string name = 1;
	int32 maximum_retry_count = 2;
}

// Resources contains container's resources (cgroups config, ulimits...)
// to see https://github.com/moby/moby/blob/master/api/types/container/host_config.go
message Resources {
	// Applicable to all platforms
	int64 cpu_shares = 1;  // CPU shares (relative weight vs. other containers)
	int64 memory = 2;      // Memory limit (in bytes)
	int64 nano_cpus = 3;   // CPU quota in units of 10<sup>-9</sup> CPUs.

	// Applicable to UNIX platforms
	string cgroup_parent = 4;  // Parent cgroup.
	int32 blkio_weight = 5;    // Block IO weight (relative weight vs. other containers)
	WeightDevice blkio_weight_device = 6;        // []*blkiodev.WeightDevice
	ThrottleDevice blkio_device_read_bps = 7;    // []*blkiodev.ThrottleDevice
	ThrottleDevice blkio_device_write_bps = 8;   // []*blkiodev.ThrottleDevice
	ThrottleDevice blkio_device_read_iops = 9;   // []*blkiodev.ThrottleDevice
	ThrottleDevice blkio_device_write_iops = 10; // []*blkiodev.ThrottleDevice
	int64 cpu_period = 11;                       // CPU CFS (Completely Fair Scheduler) period
	int64 cpu_quota = 12;                        // CPU CFS (Completely Fair Scheduler) quota
	int64 cpu_realtime_period = 13;              // CPU real-time period
	int64 cpu_realtime_runtime = 14;             // CPU real-time runtime
	string cpuset_cpus = 15;                     // CpusetCpus 0-2, 0,1
	string cpuset_mems = 16;                     // CpusetMems 0-2, 0,1
	repeated DeviceMapping devices = 17;         // List of devices to map inside the container
	repeated string device_cgroup_rules = 18;    // List of rule to be added to the device cgroup
	int64 disk_quota = 19;                       // Disk limit (in bytes)
	int64 kernel_memory = 20;                    // Kernel memory limit (in bytes)
	int64 memory_reservation = 21;               // Memory soft limit (in bytes)
	int64 memory_swap = 22;                      // Total memory usage (memory + swap); set `-1` to enable unlimited swap
	int64 memory_swappiness = 23;                // Tuning container memory swappiness behaviour
	int64 oom_kill_disable = 24;                 // Whether to disable OOM Killer or not
	int64 pids_limit = 25;                       // Setting pids limit for a container
	repeated Ulimit ulimits = 26;                // List of ulimits to be set in the container

	// Applicable to Windows
	int64 cpu_count = 27;              // CPU count
	int64 cpu_percent = 28;            // CPU percent
	uint64 io_maximum_iops = 29;       // Maximum IOps for the container system drive
	uint64 io_maximum_bandwidth = 30;  // Maximum IO in bytes per second for the container system drive
}

// DeviceMapping represents the device mapping between the host and the container.
message DeviceMapping {
	string path_on_host = 1;
	string path_in_container = 2;
	string cgroup_permissions = 3;
}

// HostConfig the non-portable Config structure of a container.
// Here, "non-portable" means "dependent of the host we are running on".
// Portable information *should* appear in Config.
// to see https://github.com/moby/moby/blob/master/api/types/container/host_config.go
message HostConfig {
	// Applicable to all platforms
	repeated string binds = 1;        // List of volume bindings for this container
	string container_id_file = 2;     // File (path) where the containerId is written
	LogConfig  log_config = 3;        // Configuration of the logs for this container
	string network_mode = 4;          // Network mode to use for the container, "none", "default", "container:<id>"
	PortMap port_bindings = 5;                   // Port mapping between the exposed port (container) and the host
	RestartPolicy restart_policy = 6;            // Restart policy to be used for the container
	bool auto_remove = 7;                        // Automatically remove container when it exits
	string volume_driver = 8;                    // Name of the volume driver used to mount volumes
	repeated string volumes_from = 9;            // List of volumes to take from other container

	// Applicable to UNIX platforms
	repeated string cap_add = 10;                // List of kernel capabilities to add to the container
	repeated string cap_drop = 11;               // List of kernel capabilities to remove from the container
	repeated string dns = 12;                    // List of DNS server to lookup
	repeated string dns_options = 13;            // List of DNSOption to look for
	repeated string dns_search = 14;             // List of DNSSearch to look for
	repeated string extra_hosts = 15;            // List of extra hosts
	repeated string group_add = 16;              // List of additional groups that the container process will run as
	string ipc_mode = 17;                        // IPC namespace to use for the container, "", "host", "container"
	string cgroup = 18;                          // Cgroup to use for the container, "container:<id>"
	repeated string links = 19;                  // List of links (in the name:alias form)
	int32 oom_score_adj = 20;                    // Container preference for OOM-killing
	string pid_mode = 21;                        // PID namespace to use for the container
	bool privileged = 22;                        // Is the container in privileged mode
	bool publish_all_ports = 23;                 // Should docker publish all exposed port for the container
	bool readonly_rootfs = 24;                   // Is the container root filesystem in read-only
	repeated string security_opt = 25;           // List of string values to customize labels for MLS systems, such as SELinux.
	map<string, string> storage_opt = 26;        // Storage driver options per container.
	map<string, string> tmpfs = 27;              // List of tmpfs (mounts) used for the container
	string uts_mode = 28;                        // UTS namespace to use for the container
	string userns_mode = 29;                     // The user namespace to use for the container
	int64 shm_size = 30;                         // Total shm memory usage
	map<string, string> sysctls = 31;            // List of Namespaced sysctls used for the container
	string runtime = 32;                         // Runtime to use with this container

	// Applicable to Windows
	uint32 console_size_height = 33;             // Initial console size (height,width)
	uint32 console_size_width = 34;              // Initial console size (height,width)
	string isolation = 35;                       // Isolation technology of the container (e.g. default, hyperv)

	// Contains container's resources (cgroups, ulimits)
	Resources resources = 36;

	// Mounts specs used by the container
	repeated VolumeMount mounts = 37;

	// Run a custom init inside the container, if null, use the daemon's configured settings
	bool init = 38;
}

// PortBinding represents a binding between a Host IP address and a Host Port
// to see https://github.com/docker/go-connections/blob/master/nat/nat.go
message PortBinding {
	// HostIP is the host IP Address
	string host_ip = 1;
	string host_port = 2;
}

// PortMap is a collection of PortBinding indexed by Port
// to see https://github.com/docker/go-connections/blob/master/nat/nat.go
message PortMap {
    map<string, PortBinding> value = 1;
}

// PortSet is a collection of structs indexed by Port
// to see https://github.com/docker/go-connections/blob/master/nat/nat.go
message PortSet {
	map<string, string> value = 1;
}


// Mount represents a mount (volume).
// to see https://github.com/moby/moby/blob/master/api/types/mount/mount.go
message VolumeMount {
	string mount_type = 1; // "bind", "volume", "tmpfs"
	// Source specifies the name of the mount. Depending on mount type, this
	// may be a volume name or a host path, or even ignored.
	// Source is not supported for tmpfs (must be an empty value)
	string source = 2; 
	string target = 3;
	string read_only= 4;
	string consistency = 5; // "consistent", "cached", "delegated", "default"

	BindOptions   bind_options = 6;
	VolumeOptions volume_options = 7;
	TmpfsOptions  tmpfs_options = 8;
}

// BindOptions defines options specific to mounts of type "bind".
// to see https://github.com/moby/moby/blob/master/api/types/mount/mount.go
message BindOptions {
	string propagation = 1; // "rprivate", "private", "rshared", "shared", "rslave", "slave"
}

// VolumeOptions represents the options for a mount of type volume.
message VolumeOptions {
	bool no_copy = 1;
	map<string, string> labels = 2;
	DriverConfig driver = 3;
}

// Driver represents a volume driver.
message DriverConfig {
	string name = 1;
	map<string, string> options = 2;
}

// TmpfsOptions defines options specific to mounts of type "tmpfs".
message TmpfsOptions {
	// Size sets the size of the tmpfs, in bytes.
	//
	// This will be converted to an operating system specific value
	// depending on the host. For example, on linux, it will be converted to
	// use a 'k', 'm' or 'g' syntax. BSD, though not widely supported with
	// docker, uses a straight byte value.
	//
	// Percentages are not supported.
	int64 size_bytes = 1;
	// Mode of the tmpfs upon creation
	uint32 mode = 2;

	// TODO(stevvooe): There are several more tmpfs flags, specified in the
	// daemon, that are accepted. Only the most basic are added for now.
	//
	// From docker/docker/pkg/mount/flags.go:
	//
	// var validFlags = map[string]bool{
	// 	"":          true,
	// 	"size":      true, X
	// 	"mode":      true, X
	// 	"uid":       true,
	// 	"gid":       true,
	// 	"nr_inodes": true,
	// 	"nr_blocks": true,
	// 	"mpol":      true,
	// }
	//
	// Some of these may be straightforward to add, but others, such as
	// uid/gid have implications in a clustered system.
}

// WeightDevice is a structure that holds device:weight pair
// to see http://github.com/moby/moby/blob/master/api/types/blkiodev/blkio.go
message WeightDevice {
	string path = 1;
	int32 weight = 2;
}

// ThrottleDevice is a structure that holds device:rate_per_second pair
// to see http://github.com/moby/moby/blob/master/api/types/blkiodev/blkio.go
message ThrottleDevice {
	string path = 1;
    uint64 rate = 2;
}

// Ulimit is a human friendly version of Rlimit.
// to see https://github.com/docker/go-units/blob/master/ulimit.go
message Ulimit {
	string name = 1;
	int64 hard = 2;
	int64 soft = 3;
}

// NetworkingConfig represents the container's networking configuration for each of its interfaces
// Carries the networking configs specified in the 'docker run' and 'docker network connect' commands
// to see https://github.com/moby/moby/blob/master/api/types/network/network.go
message NetworkingConfig {
	map<string, EndpointSettings> endpoints_config = 1; // Endpoint configs for each connecting network
}

// EndpointSettings stores the network endpoint details
message EndpointSettings {
	// Configurations
	EndpointIPAMConfig ipam_config = 1;
	repeated string links = 2;
	repeated string aliases = 3;
	// Operational data
	string network_id = 4;
	string endpoint_id = 5;
	string gateway = 6;
	string ip_address = 7;
	int32 ip_prefix_len = 8;
	string ipv6_gateway = 9;
	string global_ipv6_address = 10;
	int32 global_ipv6_prefix_len = 11;
	string mac_address = 12;
	map<string, string> driver_opts = 13;
}

// EndpointIPAMConfig represents IPAM configurations for the endpoint
message EndpointIPAMConfig {
	string ipv4_address = 1;
	string ipv6_address = 2;
	repeated string link_local_ips = 3;
}
